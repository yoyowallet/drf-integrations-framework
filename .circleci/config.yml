version: 2.1

commands:
  wait_for_database:
    steps:
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

jobs:
  test:
    docker:
      - image: circleci/python:3.6.10-node
      - image: circleci/postgres:11.5-alpine
        environment:
          POSTGRES_DB: platform
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - wait_for_database
      - run:
          name: Install system dependencies to build Python
          command: |
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get install --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
      - run:
          name: Install pyenv and required Python versions
          command: |
            unset PYENV_ROOT
            curl https://pyenv.run | bash
            export PATH="$HOME/.pyenv/bin:$PATH"
            pyenv install 3.6.10
            pyenv install 3.7.7
            pyenv install 3.8.3
            pyenv rehash
      - run:
          name: Install test dependencies and setup pyenv
          command: |
            export PATH="$HOME/.pyenv/bin:$PATH"
            sudo pip install -U tox==3.15.2 tox-pyenv==1.1.0
            pyenv local 3.6.10 3.7.7 3.8.3
      - run:
          name: Run tests
          command: |
            export PATH="$HOME/.pyenv/bin:$PATH"
            tox

  lint:
    docker:
      - image: circleci/python:3.6.10-node
    steps:
      - checkout
      - run:
          name: Run lint
          command: |
            sudo pip install -U pre-commit==2.5.1
            git diff-tree --no-commit-id --name-only -r $CIRCLE_SHA1 | xargs pre-commit run --files

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint
      - test
